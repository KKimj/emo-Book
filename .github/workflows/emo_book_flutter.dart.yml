name: Flutter
# Build, Unit Tests And Deployment

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]
  workflow_dispatch:
  repository_dispatch:

jobs:
  flutter_build: # Test and Build Flutter Project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, self-hosted, macos-latest]
        sdk: [stable] # [stable, beta, dev]
    env:
      flutter-project-dir: ./emo_book_flutter
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_TOKEN }}
          submodules: true
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.x'
          channel: ${{ matrix.sdk }}
      - name: GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_SHA"
      - name: Setup SDKs
        run: |
          dart --version
          flutter --version

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        working-directory: ${{ env.flutter-project-dir }}

      - name: Analyze project source
        run: dart analyze --fatal-infos
        working-directory: ${{ env.flutter-project-dir }}
        continue-on-error: true

      - name: Install dependencies
        run: flutter pub get
        working-directory: ${{ env.flutter-project-dir }}

      - name: Run tests
        run: flutter test
        working-directory: ${{ env.flutter-project-dir }}
        continue-on-error: true

      - name: Build web
        run: flutter build web --web-renderer html
        working-directory: ${{ env.flutter-project-dir }}
      - uses: actions/upload-artifact@v2
        with:
          name: build_web
          path: ${{ env.flutter-project-dir }}/build/web/

  flutter_release: # Release Web, only Merged on release Branch
    if: ${{ github.event_name == 'push' }}
    needs: flutter_build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, self-hosted, macos-latest]
        sdk: [stable] # [stable, beta, dev]
    env:
      flutter-project-dir: ./emo_book_flutter
    steps:
      - uses: actions/checkout@v2
      - name: Get build_web
        uses: actions/download-artifact@v2
        with:
          name: build_web
          path: ${{ env.flutter-project-dir }}/build/web
      - name: Release Web
        run: file -f ${{ env.flutter-project-dir }}/build/web
        working-directory: ${{ env.flutter-project-dir}}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_EMO_BOOK_KR }}'
          channelId: live
          projectId: emo-book-kr

  flutter_preview: # Preview Web, when PR to main Branch
    if: ${{ (github.event_name == 'pull_request' || github.event_name == 'pull_request_target' || github.event_name == 'workflow_dispatch') }}
    needs: flutter_build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [windows-latest, self-hosted, macos-latest]
        sdk: [stable] # [stable, beta, dev]
    env:
      flutter-project-dir: ./emo_book_flutter
      GITHUB_CONTEXT: ${{ toJSON(github) }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.REPO_TOKEN }}
      - name: Get build_web
        uses: actions/download-artifact@v2
        with:
          name: build_web
          path: ${{ env.flutter-project-dir }}/build/web
      - name: Preview Web
        run: file -f ${{ env.flutter-project-dir }}/build/web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_EMO_BOOK_KR }}'
          channelId: ${{env.GITHUB_EVENT_NAME}}${{env.GITHUB_SHA}}
          projectId: emo-book-kr
